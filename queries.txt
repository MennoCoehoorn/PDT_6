2:
MATCH (a:Account)
WITH a, SIZE(()-[:FOLLOWS]->(a)) as followerCnt
ORDER BY followerCnt DESC LIMIT 5
RETURN a

3:
a:
MATCH (a:Account {screen_name: "katyperry"}),
      (b:Account {screen_name: "KimKardashian"})
MATCH path=shortestPath((a)-[:FOLLOWS*]-(b))
RETURN path
b:
MATCH (a:Account {screen_name: "realDonaldTrump"}),
    (b:Account {screen_name: "katyperry"})
RETURN (a)-[:FOLLOWS*4]->(b)

4:
MATCH (a:Account)-[:POSTS]->(t:Tweet)
WITH t,a, SIZE(()-[:RETWEETS]->(t)) as rCnt
ORDER BY rCnt DESC LIMIT 10
MATCH (a)-[:POSTS]->(bad:Tweet) 
WITH bad,SIZE(()-[:RETWEETS]->(bad)) as brCnt
ORDER BY brCnt ASC LIMIT 10
RETURN bad

5:
MATCH (a:Account {screen_name: 'realDonaldTrump'})-[:POSTS]->(t:Tweet)
WITH t, SIZE(()-[:RETWEETS]->(t)) as rCnt
ORDER BY rCnt DESC LIMIT 1
WITH t
MATCH (donald:Account {screen_name: 'realDonaldTrump'})
CREATE (me:Account {screen_name:'MennoCoehoorn', name:'Marek Å trba', id:'18111998'})
CREATE (mytweet:Tweet {content:t.content, author_id:me.id})
CREATE (me)-[r:FOLLOWS]->(donald)
CREATE (mytweet)-[rt:RETWEETS]->(t)

6:
MATCH (stl:Account {screen_name: '777stl'})-[:FOLLOWS]->(follower:Account),
(fofollower:Account)-[:FOLLOWS]->(follower)
WHERE stl <> fofollower
AND fofollower <> follower
WITH fofollower,SIZE((fofollower)-[:FOLLOWS]->(follower)) as followerCnt
ORDER BY followerCnt DESC LIMIT 10
RETURN fofollower

7:
MATCH (dayner:Account {screen_name:"DaynerWilson"})
OPTIONAL MATCH (dayner)-[:FOLLOWS]->(followed:Account)
MATCH (dayner)-[:POSTS]->(:Tweet)-[:RETWEETS*]->(dTweets:Tweet)<-[:RETWEETS*]-(:Tweet)<-[:POSTS]-(toFollow:Account)
WHERE toFollow <> dayner AND toFollow <> followed
WITH toFollow, sum(size((toFollow)-[:POSTS]->(:Tweet)-[:RETWEETS*1..]->(dTweets))) as rCnt
ORDER BY rCnt DESC
LIMIT 10
RETURN  toFollow

8:
MATCH (a:Account)-[:POSTS]->(t:Tweet {id: "1289380305728503808"})
MATCH (followers:Account)-[:FOLLOWS*1..5]->(a)
MATCH (followers)-[:POSTS]->(fTweets:Tweet) WHERE NOT (fTweets)-[:RETWEETS]->(t)
WITH split(t.content, ' ')as tSplit,split(fTweets.content,' ') as fTSplit, fTweets
WITH tSplit, fTSplit, fTweets, SIZE(apoc.coll.intersection(tSplit,fTSplit)) as splitScore
ORDER BY splitScore DESC 
LIMIT 5
RETURN fTweets.id, splitScore

Bonus:
MATCH (katy:Account {screen_name: 'katyperry'}), (donald:Account {screen_name: 'realDonaldTrump'})
CALL apoc.path.expandConfig(katy, {
    relationshipFilter: "POSTS|RETWEETS",
    minLevel:1,
    maxLevel:15,
    terminatorNodes: [donald]
})
YIELD path
WITH katy,donald,path,length(path) as hops
WITH katy,donald,min(hops) as minHops
CALL apoc.path.expandConfig(katy, {
    relationshipFilter: "POSTS|RETWEETS",
    minLevel:1,
    maxLevel:minHops,
    terminatorNodes: [donald]
})
YIELD path
RETURN path